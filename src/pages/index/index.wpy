<style lang="less">
  .userinfo {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .userinfo-avatar {
    width: 80rpx;
    height: 80rpx;
    border-radius: 50%;
  }

  .userinfo-nickname {
    color: #aaa;
  }
</style>
<template>
  <view class="container">
   <view wx:if="{{!showBlueToothDetail}}">{{showTips}}</view>
   <view wx:else>连接的蓝牙：{{name!=''?name:deviceId}}</view>
  </view>
</template>

<script>
  import wepy from 'wepy'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: 'test'
    }

    data = {
      deviceId: '',
      name: '',
      serviceId: '',
      showBlueToothDetail: false,
      showTips: '猪宝宝蓝牙配置'
    }

    computed = {
      now () {
        return +new Date()
      }
    }

    methods = {
      connect2() {
        console.log(123)
      }
    }
    connectBLEZDevice() {
      let that = this
      let devicesId = that.data.deviceId
      wx.createBLEConnection({
        deviceId: devicesId,
        success: (res) => {      // 连接蓝牙设备成功
          console.log('connection')
          console.log(res)
          wx.showToast({
            'title': '连接蓝牙成功...',
            'duration': 2000,
            'icon': 'none'
          })
          that.showBlueToothDetail = true;
          that.$apply()
          wx.getBLEDeviceServices({
            deviceId: devicesId,
            success(res) {    // 获取服务id成功
              that.data.serviceId = res.services[1].uuid
              let serviceId = res.services[1].uuid
              that.$apply()
              wx.getBLEDeviceCharacteristics({
                deviceId: devicesId,
                serviceId: serviceId,
                success(res) {
                  console.log('device getBLEDeviceCharacteristics:', res.characteristics)
                }
              })
            }
          })
        },
        fail: (res) => {
          console.log('连接蓝牙设备失败')
          console.log(res)
          wx.showToast({
            'title': '连接蓝牙失败,请稍后再试',
            'duration': 2000,
            'icon': 'none'
          })
        }
      })
    }
    foundCallback(res) {
      let that = this
      console.log('foundcallback', res)
      let devices = res.devices
      for (let i = 0; i < devices.length; i++) {
//        let advertisData = devices[i].advertisData
        console.log('find')
        console.log('dataDetail', devices[i])
        wx.stopBluetoothDevicesDiscovery({})
        that.deviceId = devices[i].deviceId
        that.name = devices[i].name
        that.$apply()
        console.log('this data', that.data)
        wx.hideLoading()
        that.connectBLEZDevice()
      }
    }
    search () {
      let that = this
      wx.startBluetoothDevicesDiscovery({
        services: [], // todo 填写uuid
        success(res) {
          console.log('discovery', res)
          wx.showLoading({
            title: '加载中'
          })
          that.foundCallback = that.foundCallback.bind(that)
          wx.onBluetoothDeviceFound(that.foundCallback)
          setTimeout(function() {
            if (!that.data.deviceId) {
              wx.hideLoading()
              wx.showToast({ type: 'exception', content: '搜索设备超时', duration: 3000 })
              console.log('搜索设备超时')
              wx.stopBluetoothDevicesDiscovery({})
            }
          }, 20000)
        }
      })
    }
    connect () {
      let that = this
      wx.openBluetoothAdapter({
        success(res) {
          console.log('res', res)
          wx.getBluetoothAdapterState({
            success: function (res) {
              console.log('state', res)
              console.log('检查蓝牙状态')
              if (!!res && res.available) {
                if (!res.discovering) {
                  console.log('that', that)
                  that.search()
                }
              } else if (!res.available) {
                wx.showToast({
                  'title': '设备无法开启蓝牙连接!',
                  'duration': 2000,
                  'icon': 'none'
                })
              }
            }
          })
        },
        fail() {
          console.log('failed')
          wx.showToast({
            'title': '请开启手机蓝牙后再试!',
            'duration': 2000,
            'icon': 'none'
          })
        }
      })
    }
    onLoad() {
      this.connect()
    }
  }
</script>
